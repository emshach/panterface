// UIKit Theme Customizations (see https://getuikit.com/docs/sass)

// 1. Your custom variables and variable overwrites in ./theme/_variables.scss
// @import "theme/variables";
// $global-link-color: #DA7D02;

// 2. Import default variables and available mixins.
@import "~uikit/src/scss/variables.scss";
@import "~uikit/src/scss/mixins.scss";

// 3. Your custom mixin overwrites.
//@import "theme/accordion-mixins.scss";

// 4. Import UIkit.
@import "~uikit/src/scss/uikit.scss";

// toastr style stolen from architect-ui
@import "components/toastr";

html, body {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
#prompt {
  position: fixed;
  bottom: 0;
  background: transparent;
}
.uk-input, .uk-select, .uk-textarea {
  border: 1px solid #e5e5e5;
  background: rgba(255,255,255,0.3);
}
.uk-dropdown {
  padding: 4px 0;
}
form.uk-form-stacked label {
  font-size: 0.8em;
}
.debug {
  display: none !important;
}
.uk-dropdown-nav > li > a {
  padding: 5px 10px;
  background: transparent;
  transition: 0.3s;
  &:hover {
    background: rgba(135, 206, 250, 0.3);
  }
}
.btn-icon {
  margin-right: 6px;
}
.widget.uk-card.uk-card-default {
    box-shadow: 0 2px 4px rgba(0,0,0,0.20);
}
.uk-card {
  .uk-card-title {
    margin-top: 0;
  }
  .card-subtitle {
    position: relative;
    margin: 0;
    top: -1.5em;
    font-style: italic
  }
  .title-actions {
    position: absolute;
    top: 0;
    right: 0;
    .uk-button {
      padding: 8px;
      height: auto;
      line-height: normal;
    }
  }
  .selector {
    color: lightgrey;
  }
  &.selected {
    background-image: linear-gradient(to bottom left, skyblue 0%, transparent 60%);
    .selector {
      color: palegreen;
    }
  }
  .item-actions {
    // margin: 16px -10px -16px;
    > * {
      float: right;
    }
    .widget {
      .uk-button, .icon {
        padding: 0 6px;
      }
      .icon {
        box-sizing: content-box;
      }
    }
  }
  .card-bg {
    position: absolute;
    top: 1px;
    right: 1px;
    bottom: 1px;
    left: 1px;
    overflow: hidden;
  }
}
.uk-modal-title {
  text-transform: capitalize;
}
.actor-modal {
  .uk-modal-dialog {
    min-width: 75%;
  }
  .uk-modal-body {
    padding: 16px;
  }
  .modal-actions {
    display: flex;
    justify-content: flex-end;
    margin: 12px -16px -16px;
    .uk-button {
      padding: 0 16px;
      &.btn-ok {
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.25);
      padding: 0 24px;
      }
    }
  }
  .loading {
    color: #39f;
    overflow: hidden;
    transition: 1s;
    margin-left: -16px;
    margin-right: -16px;
    &:not(.active) {
      height: 0;
    }
    .label {
      margin-left: 16px;
    }
  }
}
.uk-table-striped {
  > tr, tbody tr {
    &:nth-of-type(odd) {
      background: rgba(0,0,0,0.05);      
      border-top: 1px solid rgba(0,0,0,0.04);
      border-bottom: 1px solid rgba(0,0,0,0.08);
    }
  }
}
.uk-table {
  > tr, tbody tr {
    &.active {
      background: rgba(255, 255, 221,0.9)
    }
  }
}
.uk-table-striped {
  > tr, tbody tr {
    &:nth-of-type(odd).uk-active {
      background: rgba(255, 255, 187,0.9);
    }
  }
}
.uk-table-hover {
  > tr, tbody tr {
    &:hover {
      background: rgba(255, 255, 221,0.9);
    }
    &:nth-of-type(odd):hover {
      background: rgba(255, 255, 187,0.9);
    }
  }
}
.action-result {
  > h4 {
    margin-top: 12px;
    margin-bottom: 0;
  }
  h5 {
    margin: 0 -8px 10px;
    padding: 0 4px;
    border-bottom: 1px solid rgba(0,0,0,0.1);
    font-variant: small-caps;
  }
  * + h5 {
    margin-top: 20px;
  }
  .uk-accordion {
    margin-top: 0;
    > li {
      border: 1px solid rgba(0,0,0,0.1);

      padding: 0 10px;
      background: #f8fafd;
    }
  }
  .uk-accordion-title {
    margin: -1px -11px;
    padding: 2px 10px;
    background: white;
    &::before {
      margin-left: -16px;
      float: left;
    }
  }
  .uk-open > .uk-accordion-title {
    border-bottom: 1px solid rgba(0,0,0,0.2);
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    
  }
  > .error, .content-outcome, .content-log, .content-err  {
    white-space: pre
  }
  .content-outcome {
    &.success {
      color: green;
    }
    &.error {
      color: darkred;
    }
  }
}
// FIXME: Don't think I should have to do this
.multiselect__clear {
  position: absolute;
  right: 41px;
  height: 40px;
  width: 40px;
  display: block;
  cursor: pointer;
  z-index: 2;
  &:after, &:before {
    content: "";
    display: block;
    position: absolute;
    width: 3px;
    height: 16px;
    background: #aaa;
    top: 12px;
    right: 4px
  }
  &:before {
    transform: rotate(45deg)
  }
  &:after {
    transform: rotate(-45deg)
  }
}
