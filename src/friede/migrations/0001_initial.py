# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-03-21 20:02
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContainerEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LinkEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Link')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LocationEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('target', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferenceEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Reference')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('format', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('default', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScreenEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('BooleanField', 'True/False'), ('CharField', 'String'), ('ChoiceField', 'Choice'), ('TypedChoiceField', 'Choice (typed)'), ('DateField', 'Date'), ('DateTimeField', 'Date and time'), ('DecimalField', 'Decibal'), ('DurationField', 'Duration'), ('EmailField', 'Email'), ('FileField', 'File'), ('FilePathField', 'File-path'), ('FloatField', 'Fraction'), ('ImageField', 'Image'), ('IntegerField', 'Integer'), ('GenericIPAddressField', 'IP Address'), ('MultipleChoiceField', 'Multiple Choice'), ('TypedMultipleChoiceField', 'Multiple Choice (typed)'), ('NullBooleanField', 'True/False/Null'), ('RegexField', 'Regular Expression'), ('SlugField', 'Slug'), ('TimeField', 'Time'), ('URLField', 'URL'), ('UUIDField', 'UUID'), ('ComboField', 'Combo'), ('MultiValueField', 'Multiple Values'), ('SplitDateTimeField', 'Split date and time'), ('ModelChoiceField', 'Model Choice'), ('ModelMultipleChoiceField', 'Multiple Model Choice')], default='CharField', max_length=32)),
                ('default', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SettingEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShellEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlotEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThemeEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WidgetEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_app', serialize=False, to='friede.Registry')),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_block', serialize=False, to='friede.Registry')),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_container', serialize=False, to='friede.Registry')),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_screen', serialize=False, to='friede.Registry')),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Shell',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_shell', serialize=False, to='friede.Registry')),
                ('templates', models.CharField(max_length=255)),
                ('template', models.CharField(default='index.html', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_slot', serialize=False, to='friede.Registry')),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_theme', serialize=False, to='friede.Registry')),
                ('templates', models.CharField(max_length=255)),
                ('template', models.CharField(default='index.html', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('registry_ptr', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='_widget', serialize=False, to='friede.Registry')),
            ],
            options={
                'abstract': False,
            },
            bases=('friede.registry',),
        ),
        migrations.AddField(
            model_name='widgetentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_widget_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='themeentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_theme_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='slotentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_slot_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='shellentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_shell_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='settingentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_setting_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='settingentry',
            name='setting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Setting'),
        ),
        migrations.AddField(
            model_name='setting',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_settings', through='friede.SettingEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='screenentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_screen_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='registry',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='_elements', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='referenceentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_reference_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='reference',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_references', through='friede.ReferenceEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='locationentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_location_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='location',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_locations', through='friede.LocationEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='linkentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_link_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='link',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='_links', to='friede.Location'),
        ),
        migrations.AddField(
            model_name='link',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='links', through='friede.LinkEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='containerentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_container_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='blockentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_block_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='appentry',
            name='registry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_app_entries', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='widgetentry',
            name='widget',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Widget'),
        ),
        migrations.AddField(
            model_name='widget',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_widgets', through='friede.WidgetEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='themeentry',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Theme'),
        ),
        migrations.AddField(
            model_name='theme',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_themes', through='friede.ThemeEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='slotentry',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Slot'),
        ),
        migrations.AddField(
            model_name='slot',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_slots', through='friede.SlotEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='shellentry',
            name='shell',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Shell'),
        ),
        migrations.AddField(
            model_name='shell',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_shells', through='friede.ShellEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='screenentry',
            name='screen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Screen'),
        ),
        migrations.AddField(
            model_name='screen',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_screens', through='friede.ScreenEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='containerentry',
            name='container',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Container'),
        ),
        migrations.AddField(
            model_name='container',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_containers', through='friede.ContainerEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='blockentry',
            name='block',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.Block'),
        ),
        migrations.AddField(
            model_name='block',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_blocks', through='friede.BlockEntry', to='friede.Registry'),
        ),
        migrations.AddField(
            model_name='appentry',
            name='app',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_entries', to='friede.App'),
        ),
        migrations.AddField(
            model_name='app',
            name='registry',
            field=models.ManyToManyField(blank=True, related_name='_apps', through='friede.AppEntry', to='friede.Registry'),
        ),
    ]
